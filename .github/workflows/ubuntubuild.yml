name: Ubuntu build

on: [push, pull_request]

jobs:
  build:
    runs-on:  ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-24.04]
        build_conf: [Release, Debug]
        exclude:
          - os: ubuntu-22.04
            build_conf: Debug

    env:
      WX_VERSION: "${{ matrix.os == 'ubuntu-22.04' && '3.0' || '3.2' }}"

    steps:
    - uses: actions/checkout@v2

    # System setup
    - name: Update package lists
      run: sudo apt-get update

    - name: Install Debian package tools
      if: matrix.build_conf == 'Release'
      run: sudo apt-get install build-essential debhelper-compat dpkg-dev

    - name: Install libraries
      run: sudo apt-get install autotools-dev libpq-dev libwxgtk${{ env.WX_VERSION == '3.0' && '3.0-gtk3' || env.WX_VERSION }}-dev libxslt1-dev libssh2-1-dev libxml2-dev python3-sphinx python3-sphinxcontrib.htmlhelp

    - name: Workaround Debian bug \#1112319
      run: sudo patch -u /usr/lib/python3/dist-packages/sphinx/application.py .github/workflows-helpers/01-${{ matrix.os }}-sphinx-packaging.patch

    # Debug build from source
    - name: Run bootstrap
      if: matrix.build_conf == 'Debug'
      run: ./bootstrap

    - name: Run configure
      if: matrix.build_conf == 'Debug'
      run: ./configure --with-wx-version=${{ env.WX_VERSION }} --enable-databasedesigner --enable-debug=yes

    - name: Run make
      if: matrix.build_conf == 'Debug'
      run: |
        make -j4 all
        sudo make install

    # Release build to Debian package
    - name: Run dpkg-buildpackage
      if: matrix.build_conf == 'Release'
      run: |
        dpkg-buildpackage -j4

        # Annotate created packages with OS code name
        pushd ..
        for filename in pgadmin3-lts*.{deb,buildinfo,tar.xz};
        do
          mv "${filename}" "${filename%%_*}_ubuntu-22.04_${filename#*_}"
        done
        popd

    # Publish Debian packages if tagged
    - name: Release
      uses: softprops/action-gh-release@v2
      if: matrix.build_conf == 'Release' && github.ref_type == 'tag'
      with:
        files: |
          ../pgadmin3-lts*.deb
          ../pgadmin3-lts*.buildinfo
          ../pgadmin3-lts*.tar.xz
